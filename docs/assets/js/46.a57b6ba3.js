(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{231:function(t,s,e){"use strict";e.r(s);var a=e(6),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"react原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react原理"}},[t._v("#")]),t._v(" React原理")]),t._v(" "),e("blockquote",[e("ol",[e("li",[t._v("可以更深入理解react的内部实现原理")]),t._v(" "),e("li",[t._v("加深对react的理解")]),t._v(" "),e("li",[t._v("更高效的基于react开发业务代码")]),t._v(" "),e("li",[t._v("本文主要针对react核心知识点做一个总结")]),t._v(" "),e("li",[t._v("面试")])])]),t._v(" "),e("p",[e("strong",[t._v("1. 虚拟DOM")]),t._v("（virtual document）")]),t._v(" "),e("p",[t._v("像reactjs、vuejs都是基于vdom进行二次开发框架（二者只是虚拟dom的定义属性不同）。那么为什么不约而同都采用这样一种方案？")]),t._v(" "),e("ul",[e("li",[t._v("浏览器在进行页面加载的时候，除了需要对dom树，cssom树进行解析，最后渲染，对于dom树节点少的来说，增删改查，整个html结构的变化，所带来的性能消耗可以忽略不计，然而现代网站这种现象基本不存在，因此，构建一个中大型网站来说，频繁的遍历，更新，操作dom，性能开销会很大的，而采用虚拟dom（js对象）来映射真实dom，将是更高效的方案")]),t._v(" "),e("li",[t._v("操作dom，需要获取当前节点，这中间可能会涉及样式、文档内容等变化、甚至增加或者消除，代码量比较大而且难于维护，虚拟dom带来的优势可以通过状态来控制视图，通过状态值的改变反映在页面上，对于开发维护来说更高效")]),t._v(" "),e("li",[t._v("虚拟dom可以组件化的形式进行二次封装开发，复用性更好。")])]),t._v(" "),e("p",[e("strong",[t._v("例子")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f39625fb5f464484ba9170bc6494b7b4~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/804a3595e94d445284c31df0fbeae9fb~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[e("strong",[t._v("2. 模板编译")])]),t._v(" "),e("p",[t._v("reactjs拥有自己的模板编译语法即通过jsx语法通过render函数返回vdom，这里也比较下vue编译模板<template></template>")]),t._v(" "),e("p",[e("font",{attrs:{color:"red"}},[t._v("下面是babel转译后的js对象构成")])],1),t._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0bbd940f83c44d4aaa11660bc025c8a4~tplv-k3u1fbpfcp-watermark.image?",alt:"babel编译"}})]),t._v(" "),e("p",[e("strong",[t._v("3. 虚拟dom渲染")])]),t._v(" "),e("ul",[e("li",[t._v("vdom对象有了就需要对这些对象进行更深入操作，reactjs采用深度优先遍历的法则")]),t._v(" "),e("li",[t._v("根据这些vdom对象不同的type类型，针对创建不同的节点")])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vdom"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("HostComponent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建或更新 dom")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("HostText")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建或更新 dom")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("FunctionComponent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建或更新 dom")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ClassComponent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建或更新 dom")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("ul",[e("li",[t._v("组件化创建虚拟dom")])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vdom"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("FunctionComponent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n       "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" childVdom "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vdom"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n       "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("childVdom"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ClassComponent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("vdom"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" childVdom "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     \n     "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("childVdom"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("ul",[e("li",[t._v("react内部执行diff算法，最优化更新虚拟节点的创建")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c0ddd634c41b4bf096e61027244bcb03~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[e("strong",[t._v("4. 视图状态机")])]),t._v(" "),e("p",[e("strong",[t._v("react 是通过 setState 的 api 触发状态更新的，更新以后就重新渲染整个 vdom。\n而 vue 是通过对状态做代理，get 的时候收集以来，然后修改状态的时候就可以触发对应组件的 render 了。")])]),t._v(" "),e("p",[e("strong",[t._v("举个例子")])]),t._v(" "),e("p",[t._v("从触发"),e("code",[t._v("setState")]),t._v("节点开始，先往上找到root最顶层根元素，然后往下根据已存在属性拷贝一份新的"),e("code",[t._v("fiber")]),t._v("，直到触发"),e("code",[t._v("setState")]),t._v("节点，再往下遍历调用子元素"),e("code",[t._v("render")]),t._v("，中间可以根据"),e("code",[t._v("shouldComponentUpdate")]),t._v("等方法跳过")]),t._v(" "),e("p",[t._v("多了一个往上找直到root开始遍历（因为是fiber链表结构没有层级概念，依然用树的那一套就会导致渲染重复），并且父、祖父元素都拷贝一份新"),e("code",[t._v("fiber")]),t._v("的步骤")]),t._v(" "),e("p",[e("code",[t._v("React")]),t._v("自从16.8开始使用了 "),e("code",[t._v("fiber")]),t._v(" 架构")]),t._v(" "),e("p",[e("code",[t._v("fiber")]),t._v("使用了链表结构串联来虚拟dom树，主要的三个参数：child（子）、sibling（下一个兄弟）、return（父）")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/808343a2cc154b8ba78218592e3ac349~tplv-k3u1fbpfcp-watermark.image?",alt:"fiber1.png"}})]),t._v(" "),e("p",[e("code",[t._v("fiber")]),t._v("遍历过程就是找第一个元素一直找到底，然后找兄弟，没兄弟了往上")]),t._v(" "),e("p",[t._v("这个阶段分为两块，往下的过程是一些调用"),e("code",[t._v("render")]),t._v("或者克隆一个"),e("code",[t._v("fiber")]),t._v("节点的操作，往上的过程是生成"),e("code",[t._v("effect")]),t._v("和"),e("code",[t._v("updateQueue")]),t._v("更新内容的操作")]),t._v(" "),e("p",[t._v("假如在"),e("code",[t._v("Text2")]),t._v("内触发"),e("code",[t._v("setState")]),t._v("：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c8d4d4dc4a304e208e21043413287e34~tplv-k3u1fbpfcp-watermark.image?",alt:"fiber2.png"}})]),t._v(" "),e("p",[t._v("给"),e("code",[t._v("Text2")]),t._v("标记更新字段"),e("code",[t._v("lanes: 1")]),t._v("，并一直往上找，找到"),e("code",[t._v("root")]),t._v("，并给沿途所以父节点设置"),e("code",[t._v("childLanes: 0")]),t._v("，然后从root根节点开始遍历")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("当遍历到 "),e("code",[t._v("lanes: 0")]),t._v(" 的时候：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("childLanes: 0")]),t._v(" 表示子孙元素没有变动直接跳过，也等于跳过了"),e("code",[t._v("diff")])]),t._v(" "),e("li",[e("code",[t._v("childLanes: 1")]),t._v(" 就只是从之前的"),e("code",[t._v("fiber")]),t._v("克隆一个新的"),e("code",[t._v("fiber")]),t._v("节点")])])]),t._v(" "),e("li",[e("p",[t._v("当遍历到 "),e("code",[t._v("lanes: 1")]),t._v("的时候")]),t._v(" "),e("ul",[e("li",[t._v("如果"),e("code",[t._v("shouldComponentUpdate")]),t._v("或类似的操作不更新，则走到上面"),e("code",[t._v("lanes: 0")]),t._v("的流程")]),t._v(" "),e("li",[t._v("调用"),e("code",[t._v("render")]),t._v("生成新的"),e("code",[t._v("fiber")])])])])]),t._v(" "),e("p",[t._v("当到达最底部没有子元素的时候，开始"),e("code",[t._v("compile")]),t._v("生成"),e("code",[t._v("updateQueue")]),t._v("节点然后重复上面步骤（叶子节点为没有子元素的节点）"),e("code",[t._v("叶子节点->兄弟->父->子->叶子")]),t._v("，最终回到"),e("code",[t._v("root")]),t._v("结束")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ea98763f204d47b8b7281753a285994e~tplv-k3u1fbpfcp-watermark.image?",alt:"fiber3.png"}})]),t._v(" "),e("p",[t._v("然后"),e("code",[t._v("commit")]),t._v("阶段，这时候有个"),e("code",[t._v("Effect")]),t._v("链表（"),e("code",[t._v("Effect")]),t._v("链表只有变动的节点），遍历"),e("code",[t._v("Effect")]),t._v("拿到节点的"),e("code",[t._v("updateQueue")]),t._v("更新了哪些内容，将"),e("code",[t._v("updateQueue")]),t._v("渲染到dom上")]),t._v(" "),e("p",[e("strong",[t._v("5. fiber架构")])]),t._v(" "),e("blockquote",[e("ol",[e("li",[t._v("Fiber是react团队定义的一种数据结构（JS对象）,一个dom节点或者组件对应一个fiber对象")]),t._v(" "),e("li",[t._v("Fiber节点之间构成 "),e("strong",[t._v("单向链表")]),t._v(" 结构, 以实现前文提到的几个特性: 更新可暂停/恢复、可跳过、可设优先级.")])])]),t._v(" "),e("p",[t._v("见上图示例")]),t._v(" "),e("p",[e("strong",[t._v("6. 总结")])]),t._v(" "),e("ol",[e("li",[t._v("react 和 vue 都是基于 vdom 的前端框架，之所以用 vdom 是因为可以精准的对比关心的属性，而且还可以跨平台渲染。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://qcsite.gatsbyjs.io/build-your-own-react/",target:"_blank",rel:"noopener noreferrer"}},[t._v("学习react构建"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);